using System;
using System.Collections.Generic;
using OpenTK;

namespace Graphics.Engine.VulkanDriver.VkInstance
{
    /// <summary>
    /// Определяет параметры для создания объекта-обертки над экземпляром Vulkan
    /// Определяет параметры для создания самого экземпляра Vulkan
    /// </summary>
    internal sealed class VulkanInstanceCreateInfo
    {
        /// <summary>
        /// Имена расширений, которые затребовал пользователь при создании экземпляра Vulkan.
        /// Они должны быть предустановленными в системе 
        /// Примечание: (Но толи при установке драйвера видеокарты, толи при установке SDK не выяснил)
        /// </summary>
        public IEnumerable<String> RequestedExtensionNames { get; set; }

        /// <summary>
        /// Имена слоев, которые затребовал пользователь при создании экземпляра Vulkan.
        /// Они должны быть предустановленными в системе.
        /// Примечание: (Но толи при установке драйвера видеокарты, толи при установке SDK не выяснил)
        /// </summary>
        public IEnumerable<String> RequestedLayerNames { get; set; }

        /// <summary>
        /// Имя приложения. Используется при создании экземпляра объекта Vulkan.
        /// Имя можно указывать любое. Носит для Vulkan только информационный характер. 
        /// Как сказано в документации: Может использоваться разработчиками при отладке их приложения.
        /// Vulkan добавляет эту информацию в информацию отладочную.
        /// </summary>
        public String ApplicationName { get; set; }

        /// <summary>
        /// Версия приложения. Используется при создании экземпляра объекта (инстанса)  
        /// Версию можно указывать любую. Носит для Vulkan только информационный характер. 
        /// Как сказано в документации: Может использоваться разработчиками при отладке их приложения.
        /// Vulkan добавляет эту информацию в информацию отладочную.
        /// </summary>
        public Version ApplicationVersion { get; set; }

        /// <summary>
        /// Имя движка. Используется при создании экземпляра объекта (инстанса)  
        /// Имя можно указывать любое. Носит для Vulkan только информационный характер. 
        /// Как сказано в документации: Может использоваться разработчиками при отладке их приложения.
        /// Vulkan добавляет эту информацию в информацию отладочную.
        /// </summary>
        public String EngineName { get; set; }

        /// <summary>
        /// Версия движка. Используется при создании экземпляра объекта (инстанса)  
        /// Версию можно указывать любую. Носит для Vulkan только информационный характер. 
        /// Как сказано в документации: Может использоваться разработчиками при отладке их приложения.
        /// Vulkan добавляет эту информацию в информацию отладочную.
        /// </summary>
        public Version EngineVersion { get; set; }

        /// <summary>
        /// Версия API Vulkan. Поддерживаемая версия - хардкор, так как не уверен, 
        /// что после изменения стандарта и как следствие версии, что-нибудь не устареет (будет помечено obsolete).
        /// В Vulkan используется версия трех компонент: Major, Minor, Patch
        /// Так в c# версию можно представить как: Major, Minor, Build (Patch)
        /// Четвертый компонент Revision не используется
        /// ----------------------------------------------------------------------
        /// На текущий момент используется первая версия Vulkan без указания Minor и Patch
        /// Реально поддерживаемую версию Vulkan можно получить конкретно для каждого физического устройства
        /// Данное свойство используется при создании экземпляра Vulkan, 
        /// а также планируется использовать в будущем, при проверке использования необходимой функциональности
        /// </summary>
        public Version VulkanApiVersion { get; set; }

        /// <summary>
        /// Свойство определяет разрешено ли включение отладки и слоев валидации Vulkan'а.
        /// Если флаг установлен отладка включена, иначе отключена.
        /// </summary>
        public Boolean IsDebugEnabled { get; set; }

        /// <summary>
        /// Окно на которое будет выводиться изображение пользователю
        /// </summary>
        public VulkanWindow VulkanWindow { get; set; }
    }
}